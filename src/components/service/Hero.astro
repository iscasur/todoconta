---
// src/components/service/Hero.astro
export interface Props {
  title: string;
  description: string;
  badge?: string;
  recommendedFor: string;
  image?: string;
  primaryCta: {
    text: string;
    url: string;
  };
  secondaryCta?: {
    text: string;
    url: string;
  } | null;
  includedFeatures?: Array<{
    icon: string;
    text: string;
    included: boolean;
  }>;
}

const {
  title,
  description,
  badge,
  recommendedFor,
  image = '/images/services/default-hero.jpg',
  primaryCta,
  secondaryCta,
  includedFeatures,
} = Astro.props;

// Filtrar para mostrar solo las caracterÃ­sticas incluidas
const topFeatures = includedFeatures
  ? includedFeatures.filter(feature => feature.included).slice(0, 6)
  : [];
---

<section class="hero-section">
  <div class="container">
    <div class="hero-content">
      <div class="hero-text animate-fade-in-up">
        {badge && <span class="hero-badge">{badge}</span>}
        <h1 class="hero-title">{title}</h1>
        <p class="hero-description">{description}</p>

        <div class="hero-recommended">
          <span class="recommended-label">Recomendado para:</span>
          <p class="recommended-text">{recommendedFor}</p>
        </div>

        <div class="hero-actions">
          <a href={primaryCta.url} class="btn btn-primary">{primaryCta.text}</a>
          {
            secondaryCta && (
              <a href={secondaryCta.url} class="btn btn-outline">
                {secondaryCta.text}
              </a>
            )
          }
        </div>
      </div>

      <div class="hero-visual animate-fade-in-up delay-200">
        <img src={image} alt={title} class="hero-image" />

        {
          topFeatures.length > 0 && (
            <div class="hero-features">
              <h3 class="features-title">Incluye:</h3>
              <ul class="features-list">
                {topFeatures.map(feature => (
                  <li class="feature-item">
                    <span class="feature-icon">{feature.icon}</span>
                    <span class="feature-text">{feature.text}</span>
                  </li>
                ))}
              </ul>
            </div>
          )
        }
      </div>
    </div>
  </div>
</section>

<style>
  .hero-section {
    padding: var(--space-16) 0 var(--space-24);
    background: linear-gradient(to bottom, var(--color-white), white);
    position: relative;
    overflow: hidden;
  }

  .hero-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-10);
    align-items: center;
  }

  .hero-badge {
    display: inline-block;
    background-color: var(--color-primary);
    color: white;
    font-size: var(--font-size-xs);
    font-weight: 600;
    padding: var(--space-1) var(--space-3);
    border-radius: var(--border-radius-full);
    margin-bottom: var(--space-4);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .hero-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-5xl);
    font-weight: 800;
    color: var(--color-text-primary);
    margin-bottom: var(--space-6);
    line-height: 1.1;
  }

  .hero-description {
    font-size: var(--font-size-xl);
    color: var(--color-text-primary);
    margin-bottom: var(--space-8);
    line-height: 1.6;
  }

  .hero-recommended {
    background-color: var(--neutral-100);
    border: 1px solid var(--color-primary-light);
    border-radius: var(--border-radius-lg);
    padding: var(--space-4);
    margin-bottom: var(--space-8);
  }

  .recommended-label {
    display: block;
    font-weight: 600;
    color: var(--color-text-primary);
    margin-bottom: var(--space-1);
  }

  .recommended-text {
    color: var(--color-text-secondary);
    font-size: var(--font-size-base);
    margin: 0;
  }

  .hero-actions {
    display: flex;
    gap: var(--space-4);
    margin-bottom: var(--space-10);
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: var(--font-secondary);
    font-weight: 600;
    padding: var(--space-4) var(--space-8);
    border-radius: var(--border-radius-lg);
    transition: all var(--transition-normal);
    text-decoration: none;
    cursor: pointer;
  }

  .btn-primary {
    background-color: var(--color-primary);
    color: white;
    border: none;
  }

  .btn-primary:hover {
    background-color: var(--primary-700);
    transform: translateY(-3px);
    box-shadow: var(--shadow-md);
  }

  .btn-outline {
    background-color: transparent;
    color: var(--color-primary);
    border: 2px solid var(--color-primary);
  }

  .btn-outline:hover {
    background-color: var(--color-background-alt);
    transform: translateY(-3px);
  }

  .hero-visual {
    position: relative;
  }

  .hero-image {
    width: 100%;
    border-radius: var(--border-radius-2xl);
    box-shadow: var(--shadow-xl);
  }

  .hero-features {
    position: absolute;
    bottom: -20px;
    right: -20px;
    background-color: white;
    border-radius: var(--border-radius-xl);
    padding: var(--space-4) var(--space-6);
    box-shadow: var(--shadow-lg);
    border: 1px solid var(--color-primary-light);
    width: 80%;
  }

  .features-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-base);
    font-weight: 600;
    color: var(--neutral-800);
    margin-bottom: var(--space-3);
  }

  .features-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: var(--space-3);
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: var(--space-2);
  }

  .feature-icon {
    color: var(--color-primary);
    font-size: var(--font-size-lg);
  }

  .feature-text {
    font-size: var(--font-size-sm);
    color: var(--color-text-primary);
  }

  @media (max-width: 992px) {
    .hero-content {
      grid-template-columns: 1fr;
      text-align: center;
    }

    .hero-title {
      font-size: var(--font-size-4xl);
    }

    .hero-actions {
      justify-content: center;
    }

    .hero-image {
      max-width: 80%;
      margin: 0 auto;
    }

    .hero-features {
      width: 90%;
      right: 0;
      left: 0;
      margin: 0 auto;
    }
  }

  @media (max-width: 768px) {
    .hero-section {
      padding: var(--space-10) 0 var(--space-16);
    }

    .hero-title {
      font-size: var(--font-size-3xl);
    }

    .hero-description {
      font-size: var(--font-size-lg);
    }

    .hero-actions {
      flex-direction: column;
    }

    .features-list {
      grid-template-columns: 1fr;
    }
  }
</style>
