---
export interface Props {
  title: string;
  description: string;
  primaryCta: {
    text: string;
    url: string;
  };
  secondaryCta?: {
    text: string;
    url: string;
  };
  bgGradient?: string;
}

const { 
  title, 
  description, 
  primaryCta,
  secondaryCta,
  bgGradient = "linear-gradient(135deg, var(--color-primary) 0%, var(--primary-800) 100%)"
} = Astro.props;
---

<section class="cta-section" style={`--cta-bg-gradient: ${bgGradient};`}>
  <div class="landing-container">
    <div class="cta-content animate-fade-in-up">
      <h2 class="cta-title">{title}</h2>
      <p class="cta-description">{description}</p>
      <div class="cta-buttons">
        <a href={primaryCta.url} class="btn btn-primary">{primaryCta.text}</a>
        {secondaryCta && (
          <a href={secondaryCta.url} class="btn btn-secondary">{secondaryCta.text}</a>
        )}
      </div>
    </div>
  </div>
</section>

<style>
  .cta-section {
    background: var(--cta-bg-gradient);
    color: white;
    padding: var(--space-16) 0;
    border-radius: var(--border-radius-3xl) var(--border-radius-3xl) 0 0;
    text-align: center;
    position: relative;
    overflow: hidden;
    margin-top: var(--space-16);
  }

  .cta-section::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='100' viewBox='0 0 100 100' fill='none'%3E%3Ccircle cx='25' cy='25' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='75' cy='75' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='75' cy='25' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3Ccircle cx='25' cy='75' r='4' fill='rgba(255, 255, 255, 0.1)'/%3E%3C/svg%3E");
    opacity: 0.2;
    z-index: 1;
  }

  .cta-content {
    position: relative;
    z-index: 2;
    max-width: 700px;
    margin: 0 auto;
  }

  .cta-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-3xl);
    font-weight: 700;
    margin-bottom: var(--space-4);
  }

  .cta-description {
    margin-bottom: var(--space-8);
    font-size: var(--font-size-lg);
    opacity: 0.9;
  }

  .cta-buttons {
    display: flex;
    gap: var(--space-4);
    justify-content: center;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-family: var(--font-secondary);
    font-weight: 600;
    padding: var(--space-4) var(--space-8);
    border-radius: var(--border-radius-lg);
    transition: all var(--transition-normal);
    text-decoration: none;
    cursor: pointer;
    border: none;
  }

  .btn-primary {
    background-color: white;
    color: var(--primary-700);
  }

  .btn-primary:hover {
    transform: translateY(-3px);
    box-shadow: var(--shadow-lg);
  }

  .btn-secondary {
    background-color: rgba(255, 255, 255, 0.1);
    color: white;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }

  .btn-secondary:hover {
    background-color: rgba(255, 255, 255, 0.2);
    transform: translateY(-3px);
  }
  
  /* Animaciones */
  .animate-fade-in-up {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  .animate-fade-in-up.visible {
    opacity: 1;
    transform: translateY(0);
  }

  /* Responsive */
  @media (max-width: 768px) {
    .cta-title {
      font-size: var(--font-size-2xl);
    }

    .cta-buttons {
      flex-direction: column;
      width: 100%;
      align-items: center;
    }
    
    .btn {
      width: 100%;
      max-width: 300px;
    }
    
    .cta-section {
      border-radius: var(--border-radius-2xl) var(--border-radius-2xl) 0 0;
      margin-top: var(--space-10);
      padding: var(--space-10) 0;
    }
  }
</style>