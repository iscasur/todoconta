---
export interface Props {
  title?: string;
  subtitle?: string;
  features: Array<{
    icon: string;
    title: string;
    description: string;
  }>;
}

const { 
  title = "Funciones Principales",
  subtitle = "Descubre todas las características que harán tu trabajo más eficiente",
  features 
} = Astro.props;
---

<section class="features-section" id="features">
  <div class="landing-container">
    <div class="features-header">
      <h2 class="section-title animate-fade-in-up">{title}</h2>
      {subtitle && <p class="section-subtitle animate-fade-in-up delay-100">{subtitle}</p>}
    </div>
    
    <div class="features-grid">
      {features.map((feature, index) => (
        <div class={`feature-card animate-fade-in-up delay-${(index % 3) * 100 + 200}`}>
          <div class="feature-icon">{feature.icon}</div>
          <h3 class="feature-title">{feature.title}</h3>
          <p class="feature-description">{feature.description}</p>
        </div>
      ))}
    </div>
  </div>
</section>

<style>
  .features-section {
    padding: var(--space-20) 0 var(--space-16);
    background-color: var(--bg-primary);
  }
  
  .features-header {
    text-align: center;
    max-width: 800px;
    margin: 0 auto var(--space-12);
  }
  
  .section-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-3xl);
    font-weight: 700;
    color: var(--color-text-primary);
    margin-bottom: var(--space-4);
  }
  
  .section-subtitle {
    font-size: var(--font-size-lg);
    color: var(--neutral-600);
    max-width: 700px;
    margin: 0 auto;
  }
  
  .features-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: var(--space-6);
  }
  
  .feature-card {
    background-color: white;
    border-radius: var(--border-radius-xl);
    padding: var(--space-6);
    box-shadow: var(--shadow-md);
    transition: transform var(--transition-normal), box-shadow var(--transition-normal);
    height: 100%;
    display: flex;
    flex-direction: column;
    border: 1px solid var(--neutral-200);
  }
  
  .feature-card:hover {
    transform: translateY(-5px);
    box-shadow: var(--shadow-lg);
  }
  
  .feature-icon {
    background-color: var(--primary-50);
    color: var(--color-primary);
    width: 50px;
    height: 50px;
    border-radius: var(--border-radius-lg);
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: var(--font-size-2xl);
    margin: 0 auto var(--space-4);
  }
  
  .feature-title {
    font-family: var(--font-secondary);
    font-size: var(--font-size-lg);
    font-weight: 600;
    color: var(--color-text-primary);
    margin-bottom: var(--space-2);
    text-align: center;
  }
  
  .feature-description {
    color: var(--neutral-600);
    font-size: var(--font-size-base);
    text-align: center;
    flex-grow: 1;
  }
  
  /* Animaciones */
  .animate-fade-in-up {
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease, transform 0.6s ease;
  }
  
  .animate-fade-in-up.visible {
    opacity: 1;
    transform: translateY(0);
  }
  
  .delay-100 { transition-delay: 100ms; }
  .delay-200 { transition-delay: 200ms; }
  .delay-300 { transition-delay: 300ms; }
  .delay-400 { transition-delay: 400ms; }
  
  /* Responsive */
  @media (max-width: 768px) {
    .features-grid {
      grid-template-columns: 1fr;
    }
    
    .section-title {
      font-size: var(--font-size-2xl);
    }
  }
</style>