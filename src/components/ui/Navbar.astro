---
export interface Props {
  links?: Array<{
    title: string;
    url: string;
  }>;
  cta?: {
    title: string;
    link: string;
  };
  showPhone?: boolean;
}

const { links, cta, showPhone = false } = Astro.props as Props;
---

<header class="header">
  <nav class="nav container">
    <a href="/" class="logo">Todoconta</a>

    <div class="nav-links">
      {
        Array.isArray(links) &&
          links.map(link => (
            <a href={link.url} class={'nav-link'}>
              {link.title}
            </a>
          ))
      }
    </div>

    <div class="nav-cta">
      {
        showPhone && (
          <a href="tel:5544753602" class="nav-link phone-link">
            ðŸ“ž (55) 4475-3602
          </a>
        )
      }
      {
        cta && (
          <a href={cta.link} class="btn btn-primary">
            {cta.title}
          </a>
        )
      }
    </div>
  </nav>
</header>


<script>
  // Mobile menu functionality
  document.addEventListener('DOMContentLoaded', () => {
    // Highlight active section in navigation
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.nav-link');

    function highlightActiveSection() {
      const scrollPosition = window.scrollY + 100;

      sections.forEach(section => {
        const sectionEl = section as HTMLElement;
        const sectionTop = sectionEl.offsetTop;
        const sectionHeight = sectionEl.offsetHeight;
        const sectionId = sectionEl.getAttribute('id');

        if (
          scrollPosition >= sectionTop &&
          scrollPosition < sectionTop + sectionHeight
        ) {
          navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${sectionId}`) {
              link.classList.add('active');
            }
          });
        }
      });
    }

    window.addEventListener('scroll', highlightActiveSection);
    highlightActiveSection();
  });
</script>
