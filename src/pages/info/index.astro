---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import InfoCard from '../../components/info/InfoCard.astro';
import Hero from '../../components/sections/Hero.astro';
import { format } from 'date-fns';
import { es } from 'date-fns/locale';

// Obtener todas las p√°ginas informativas
const infoPages = await getCollection('info');

// Ordenar por fecha de actualizaci√≥n (m√°s recientes primero)
const sortedInfoPages = infoPages.sort((a, b) => {
  return b.data.lastUpdated.getTime() - a.data.lastUpdated.getTime();
});

// Agrupar p√°ginas por categor√≠as basadas en las URL
const categories = {
  'fiscal': {
    title: 'Tr√°mites Fiscales',
    description: 'Gu√≠as completas sobre tr√°mites ante el SAT, declaraciones, facturas y m√°s.',
    pages: []
  },
  'laboral': {
    title: 'Temas Laborales',
    description: 'Informaci√≥n sobre n√≥mina, IMSS, INFONAVIT, finiquitos y todo lo relacionado con empleados.',
    pages: []
  },
  'contabilidad': {
    title: 'Contabilidad',
    description: 'Recursos para entender principios contables, estados financieros y registros contables.',
    pages: []
  },
  'legal': {
    title: 'Aspectos Legales',
    description: 'Gu√≠as sobre constituci√≥n de sociedades, contratos y cumplimiento normativo.',
    pages: []
  }
};

// Asignar p√°ginas a categor√≠as basadas en sus slugs
sortedInfoPages.forEach(page => {
  // Extraer la categor√≠a del slug (ej: "fiscal-inscripcion-rfc" -> "fiscal")
  const slugParts = page.slug.split('-');
  const category = slugParts[0];
  
  if (categories[category]) {
    categories[category].pages.push(page);
  } else {
    // Si no hay categor√≠a espec√≠fica, asignar a fiscal (por defecto)
    categories['fiscal'].pages.push(page);
  }
});

// Filtrar categor√≠as vac√≠as
const activeCategories = Object.entries(categories)
  .filter(([_, data]) => data.pages.length > 0)
  .map(([key, data]) => ({ key, ...data }));
---

<Layout 
  title="Centro de Informaci√≥n Fiscal y Contable | Todoconta" 
  description="Gu√≠as completas, tutoriales y recursos sobre tr√°mites fiscales, contabilidad, n√≥mina y aspectos legales para empresas y personas f√≠sicas."
>
  <!-- Hero Section -->
  <Hero 
    title="Centro de Informaci√≥n"
    subtitle="Recursos, gu√≠as y tutoriales para entender temas fiscales y contables de manera sencilla."
    ctaText="Explorar Contenidos"
    ctaUrl="#categorias"
  />
  
  <!-- Categories Section -->
  <section class="categories-section" id="categorias">
    <div class="container">
      <h2 class="section-title text-center">Categor√≠as</h2>
      
      <div class="categories-tabs">
        <div class="tabs-header">
          {activeCategories.map((category, index) => (
            <button 
              class={`tab-button ${index === 0 ? 'active' : ''}`} 
              data-tab={category.key}
            >
              {category.title}
            </button>
          ))}
        </div>
        
        <div class="tabs-content">
          {activeCategories.map((category, index) => (
            <div 
              class={`tab-pane ${index === 0 ? 'active' : ''}`} 
              id={`tab-${category.key}`}
            >
              <div class="tab-description">
                <p>{category.description}</p>
              </div>
              
              <div class="info-grid">
                {category.pages.map(page => (
                  <InfoCard
                    title={page.data.title}
                    description={page.data.description}
                    badge={page.data.badge}
                    image={page.data.heroImage}
                    url={`/info/${page.slug}`}
                    lastUpdated={format(page.data.lastUpdated, "d 'de' MMMM, yyyy", { locale: es })}
                  />
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </section>
  
  <!-- Search Section -->
  <section class="search-section">
    <div class="container">
      <div class="search-container">
        <div class="search-content">
          <h2>¬øBuscas algo espec√≠fico?</h2>
          <p>Encuentra r√°pidamente la informaci√≥n que necesitas con nuestra herramienta de b√∫squeda.</p>
          
          <div class="search-form">
            <input 
              type="text" 
              id="info-search" 
              placeholder="Ej: inscripci√≥n RFC, facturaci√≥n, n√≥mina..." 
              class="search-input"
            >
            <button id="search-button" class="search-button">
              <span class="search-icon">üîç</span>
              <span>Buscar</span>
            </button>
          </div>
        </div>
      </div>
    </div>
  </section>
  
  <!-- Featured Articles -->
  <section class="featured-section">
    <div class="container">
      <h2 class="section-title">Art√≠culos Destacados</h2>
      
      <div class="featured-grid">
        {sortedInfoPages.slice(0, 3).map(page => (
          <div class="featured-card">
            <img 
              src={page.data.heroImage || "/images/info/default-featured.jpg"} 
              alt={page.data.title}
              class="featured-image"
            >
            <div class="featured-content">
              {page.data.badge && <span class="featured-badge">{page.data.badge}</span>}
              <h3 class="featured-title">{page.data.title}</h3>
              <p class="featured-description">{page.data.description}</p>
              <a href={`/info/${page.slug}`} class="featured-link">Leer m√°s ‚Üí</a>
            </div>
          </div>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Recent Updates -->
  <section class="recent-section">
    <div class="container">
      <div class="recent-header">
        <h2 class="section-title">Actualizaciones Recientes</h2>
        <a href="#categorias" class="view-all-link">Ver todo</a>
      </div>
      
      <div class="recent-grid">
        {sortedInfoPages.slice(0, 6).map(page => (
          <a href={`/info/${page.slug}`} class="recent-card">
            <div class="recent-content">
              <h3 class="recent-title">{page.data.title}</h3>
              <p class="recent-date">
                Actualizado: {format(page.data.lastUpdated, "d 'de' MMMM, yyyy", { locale: es })}
              </p>
            </div>
            <div class="recent-arrow">‚Üí</div>
          </a>
        ))}
      </div>
    </div>
  </section>
  
  <!-- Newsletter Section -->
  <section class="newsletter-section">
    <div class="container">
      <div class="newsletter-container">
        <div class="newsletter-content">
          <h2 class="newsletter-title">Mantente Actualizado</h2>
          <p class="newsletter-description">
            Suscr√≠bete a nuestro bolet√≠n para recibir actualizaciones fiscales, noticias contables y recursos √∫tiles.
          </p>
          
          <form class="newsletter-form" id="newsletter-form">
            <div class="form-group">
              <input 
                type="email" 
                id="newsletter-email" 
                placeholder="Tu correo electr√≥nico" 
                required 
                class="newsletter-input"
              >
              <button type="submit" class="newsletter-button">Suscribirme</button>
            </div>
            <p class="newsletter-privacy">
              Al suscribirte, aceptas nuestra <a href="/privacidad">Pol√≠tica de Privacidad</a>. Puedes darte de baja en cualquier momento.
            </p>
          </form>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  // Tabs functionality
  document.addEventListener('DOMContentLoaded', () => {
    const tabButtons = document.querySelectorAll('.tab-button');
    const tabPanes = document.querySelectorAll('.tab-pane');
    
    tabButtons.forEach(button => {
      button.addEventListener('click', () => {
        // Remove active class from all buttons and panes
        tabButtons.forEach(btn => btn.classList.remove('active'));
        tabPanes.forEach(pane => pane.classList.remove('active'));
        
        // Add active class to clicked button and corresponding pane
        button.classList.add('active');
        const tabId = `tab-${button.dataset.tab}`;
        document.getElementById(tabId).classList.add('active');
      });
    });
    
    // Newsletter form handling
    const newsletterForm = document.getElementById('newsletter-form');
    if (newsletterForm) {
      newsletterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const email = document.getElementById('newsletter-email').value;
        
        // Here you would normally send this to your backend or newsletter service
        // For demo purposes, we'll just show an alert
        alert(`¬°Gracias por suscribirte con ${email}! Pronto recibir√°s nuestras actualizaciones.`);
        newsletterForm.reset();
      });
    }
    
    // Search functionality
    const searchButton = document.getElementById('search-button');
    const searchInput = document.getElementById('info-search');
    
    if (searchButton && searchInput) {
      searchButton.addEventListener('click', () => {
        const query = searchInput.value.trim();
        if (query) {
          // Redirect to search results page (you would implement this)
          window.location.href = `/buscar?q=${encodeURIComponent(query)}`;
        }
      });
      
      // Also trigger search on Enter key
      searchInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') {
          searchButton.click();
        }
      });
    }
  });
</script>

<style>
  /* Styles for Info Index Page */
  .categories-section {
    padding: var(--space-16) 0;
  }
  
  .categories-tabs {
    margin-top: var(--space-10);
  }
  
  .tabs-header {
    display: flex;
    border-bottom: 1px solid var(--neutral-200);
    margin-bottom: var(--space-6);
    overflow-x: auto;
    padding-bottom: var(--space-1);
  }
  
  .tab-button {
    padding: var(--space-3) var(--space-6);
    background: none;
    border: none;
    font-family: var(--font-display);
    font-weight: 600;
    color: var(--neutral-900);
    margin-bottom: var(--space-2);
  }
  
  .recent-date {
    color: var(--neutral-500);
    font-size: var(--font-size-sm);
  }
  
  .recent-arrow {
    font-size: var(--font-size-xl);
    color: var(--primary-600);
    margin-left: var(--space-4);
    transition: transform var(--transition-normal);
  }
  
  .recent-card:hover .recent-arrow {
    transform: translateX(5px);
  }
  
  .newsletter-section {
    padding: var(--space-16) 0;
  }
  
  .newsletter-container {
    background: linear-gradient(135deg, var(--primary-600) 0%, var(--primary-800) 100%);
    border-radius: var(--border-radius-2xl);
    padding: var(--space-10);
    color: white;
  }
  
  .newsletter-content {
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
  }
  
  .newsletter-title {
    font-family: var(--font-display);
    font-size: var(--font-size-3xl);
    font-weight: 700;
    margin-bottom: var(--space-4);
  }
  
  .newsletter-description {
    font-size: var(--font-size-lg);
    margin-bottom: var(--space-8);
    opacity: 0.9;
  }
  
  .newsletter-form {
    max-width: 500px;
    margin: 0 auto;
  }
  
  .form-group {
    display: flex;
  }
  
  .newsletter-input {
    flex-grow: 1;
    padding: var(--space-4);
    border: none;
    border-radius: var(--border-radius-lg) 0 0 var(--border-radius-lg);
    font-size: var(--font-size-base);
    font-family: var(--font-primary);
  }
  
  .newsletter-input:focus {
    outline: none;
  }
  
  .newsletter-button {
    background-color: var(--green-600);
    color: white;
    border: none;
    padding: var(--space-3) var(--space-6);
    border-radius: 0 var(--border-radius-lg) var(--border-radius-lg) 0;
    font-family: var(--font-display);
    font-weight: 600;
    cursor: pointer;
    transition: background-color var(--transition-normal);
  }
  
  .newsletter-button:hover {
    background-color: var(--green-700);
  }
  
  .newsletter-privacy {
    font-size: var(--font-size-sm);
    margin-top: var(--space-4);
    opacity: 0.7;
  }
  
  .newsletter-privacy a {
    color: white;
    text-decoration: underline;
  }
  
  /* Responsive Adjustments */
  @media (max-width: 768px) {
    .search-form {
      flex-direction: column;
    }
    
    .search-input {
      border-radius: var(--border-radius-lg);
      margin-bottom: var(--space-3);
    }
    
    .search-button {
      border-radius: var(--border-radius-lg);
      width: 100%;
      justify-content: center;
    }
    
    .featured-grid {
      grid-template-columns: 1fr;
    }
    
    .form-group {
      flex-direction: column;
    }
    
    .newsletter-input {
      border-radius: var(--border-radius-lg);
      margin-bottom: var(--space-3);
    }
    
    .newsletter-button {
      border-radius: var(--border-radius-lg);
      width: 100%;
    }
  }
</style>